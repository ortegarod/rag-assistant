## Example Nginx reverse proxy for a single-host deployment
## - Terminates TLS
## - Proxies Next.js UI (port 3000) and FastAPI backend (port 8000)
## - Optional Basic Auth (commented)

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_name your.domain.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name your.domain.com;

  # TLS certs (use Certbot or your CA)
  ssl_certificate     /etc/letsencrypt/live/your.domain.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/your.domain.com/privkey.pem;

  # Security headers (adjust per org policy)
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options DENY;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data:; connect-src 'self' https: wss:;" always;

  # Optional: Basic Auth gate in front of everything
  # auth_basic           "Restricted";
  # auth_basic_user_file /etc/nginx/.htpasswd;  # create via: htpasswd -c /etc/nginx/.htpasswd admin

  # UI (Next.js) on port 3000
  location / {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # FastAPI endpoints on port 8000
  location = /chat   { proxy_pass http://127.0.0.1:8000; }
  location = /clear  { proxy_pass http://127.0.0.1:8000; }
  location = /health { proxy_pass http://127.0.0.1:8000; }

  # Optional: rate limit requests
  # limit_req_zone $binary_remote_addr zone=reqs:10m rate=10r/s;
  # location /chat { limit_req zone=reqs burst=20 nodelay; proxy_pass http://127.0.0.1:8000; }
}

